name: Infrastructure Deploy

on:
  push:
    branches: [ main ]
    paths: 
      - 'infra/**'
      - 'terraform/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'infra/**'
      - 'terraform/**'
  workflow_dispatch:

env:
  TF_VERSION: '1.5.0'
  AWS_REGION: us-east-2

jobs:
  security-scan-iac:
    name: Security Scan Infrastructure
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Checkov IaC Security Scan
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: ./infra
          framework: terraform
          output_format: sarif
          output_file_path: checkov-results.sarif
          soft_fail: true

      - name: Upload Checkov scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: checkov-results.sarif
          category: checkov

      - name: Run TfSec Terraform Security Scan
        uses: aquasecurity/tfsec-action@v1.0.0
        with:
          working_directory: './infra'
          format: 'sarif'
          soft_fail: true

      - name: Upload TfSec scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: tfsec.sarif
          category: tfsec

      - name: Run Snyk Infrastructure as Code scan
        uses: snyk/actions/iac@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          file: ./infra
          args: --sarif-file-output=snyk-iac-results.sarif
        continue-on-error: true

      - name: Upload Snyk IaC results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: snyk-iac-results.sarif
          category: snyk-iac

  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: security-scan-iac
    outputs:
      tfplanExitCode: ${{ steps.tf-plan.outputs.exitcode }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        working-directory: ./infra
        run: terraform init

      - name: Terraform Format Check
        working-directory: ./infra
        run: terraform fmt -check

      - name: Terraform Validate
        working-directory: ./infra
        run: terraform validate

      - name: Terraform Plan
        id: tf-plan
        working-directory: ./infra
        run: |
          export exitcode=0
          terraform plan -