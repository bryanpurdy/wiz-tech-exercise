name: Infrastructure Deployment

# Triggers: When to run this pipeline
on:
  push:
    branches: [ main ]
    paths: 
      - 'infra/**'  # Only run when Terraform files change
  pull_request:
    branches: [ main ]
    paths:
      - 'infra/**'
  workflow_dispatch:  # Allow manual triggering

# Environment variables
env:
  AWS_REGION: us-east-2
  TF_VERSION: 1.13.3

jobs:
  # Job 1: Security scan Terraform code
  security-scan:
    name: Security Scan Infrastructure
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write  # Required for Security tab upload
      actions: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Checkov: Scan IaC for misconfigurations (CIS benchmarks, best practices)
      - name: Run Checkov IaC Security Scan
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: infra/
          framework: terraform
          soft_fail: true  # Don't block on findings (demo has intentional vulnerabilities)
          output_format: sarif
          output_file_path: checkov-results.sarif

      # Upload scan results to GitHub Security tab
      - name: Upload Checkov results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: checkov-results.sarif
          category: checkov

  # Job 2: Deploy infrastructure with Terraform
  terraform:
    name: Terraform Plan/Apply
    runs-on: ubuntu-latest
    needs: security-scan  # Wait for security scan
    defaults:
      run:
        working-directory: infra/  # All commands run in infra/ directory
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Install specific Terraform version
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      # Authenticate to AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Verify Terraform code formatting
      - name: Terraform Format Check
        run: terraform fmt -check=true -diff=true

      # Initialize Terraform (download providers/modules)
      - name: Terraform Init
        run: terraform init

      # Validate Terraform syntax
      - name: Terraform Validate
        env:
          TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
        run: terraform validate

      # Preview infrastructure changes
      - name: Terraform Plan
        env:
          TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
        run: terraform plan -out=tfplan

      # Apply changes (only on main branch push)
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
        env:
          TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
        run: terraform apply -auto-approve tfplan